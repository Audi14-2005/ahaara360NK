# Generated by Django 4.2.7 on 2025-09-20 19:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DiseaseQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_text', models.TextField()),
                ('question_number', models.IntegerField()),
                ('category', models.CharField(blank=True, help_text='e.g., Cardiovascular, Digestive, etc.', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['question_number'],
            },
        ),
        migrations.CreateModel(
            name='PrakritiQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_text', models.TextField()),
                ('question_number', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['question_number'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_type', models.CharField(choices=[('patient', 'Patient'), ('dietitian', 'Dietitian')], max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('address', models.TextField(blank=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PrakritiOption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('option_text', models.TextField()),
                ('dosha_type', models.CharField(choices=[('vata', 'Vata'), ('pitta', 'Pitta'), ('kapha', 'Kapha')], max_length=10)),
                ('weight', models.FloatField(default=1.0, help_text='Weight of this option for dosha calculation')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='user_management.prakritiquestion')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PatientProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('height', models.FloatField(blank=True, help_text='Height in cm', null=True)),
                ('weight', models.FloatField(blank=True, help_text='Weight in kg', null=True)),
                ('blood_group', models.CharField(blank=True, max_length=5)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=15)),
                ('medical_conditions', models.TextField(blank=True, help_text='List any medical conditions')),
                ('allergies', models.TextField(blank=True, help_text='List any allergies')),
                ('current_medications', models.TextField(blank=True, help_text='List current medications')),
                ('prakriti_analysis_completed', models.BooleanField(default=False)),
                ('disease_analysis_completed', models.BooleanField(default=False)),
                ('health_summary_generated', models.BooleanField(default=False)),
                ('vata_percentage', models.FloatField(default=0.0)),
                ('pitta_percentage', models.FloatField(default=0.0)),
                ('kapha_percentage', models.FloatField(default=0.0)),
                ('dominant_dosha', models.CharField(blank=True, max_length=10)),
                ('daily_calorie_needs', models.FloatField(default=0.0)),
                ('breakfast_calories', models.FloatField(default=0.0)),
                ('lunch_calories', models.FloatField(default=0.0)),
                ('dinner_calories', models.FloatField(default=0.0)),
                ('snack_calories', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patient_profile', to='user_management.userprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DietitianProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('qualification', models.CharField(blank=True, choices=[('bsc', 'B.Sc. Nutrition'), ('msc', 'M.Sc. Nutrition'), ('phd', 'Ph.D. Nutrition'), ('rd', 'Registered Dietitian'), ('ayurvedic', 'Ayurvedic Practitioner'), ('other', 'Other')], max_length=20)),
                ('license_number', models.CharField(blank=True, max_length=50)),
                ('specialization', models.CharField(blank=True, max_length=200)),
                ('experience_years', models.IntegerField(default=0)),
                ('bio', models.TextField(blank=True)),
                ('clinic_name', models.CharField(blank=True, max_length=200)),
                ('clinic_address', models.TextField(blank=True)),
                ('consultation_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('is_available', models.BooleanField(default=True)),
                ('consultation_hours', models.TextField(blank=True, help_text='e.g., Mon-Fri 9AM-5PM')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dietitian_profile', to='user_management.userprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('appointment_date', models.DateTimeField()),
                ('duration_minutes', models.IntegerField(default=30)),
                ('appointment_type', models.CharField(choices=[('in_person', 'In-Person'), ('virtual', 'Virtual')], default='in_person', max_length=20)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('rescheduled', 'Rescheduled')], default='scheduled', max_length=20)),
                ('reason_for_visit', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('prescription', models.TextField(blank=True)),
                ('meeting_link', models.URLField(blank=True)),
                ('meeting_id', models.CharField(blank=True, max_length=100)),
                ('meeting_password', models.CharField(blank=True, max_length=50)),
                ('consultation_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('payment_status', models.CharField(default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dietitian', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dietitian_appointments', to='user_management.userprofile')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_appointments', to='user_management.userprofile')),
            ],
            options={
                'ordering': ['-appointment_date'],
            },
        ),
        migrations.CreateModel(
            name='PrakritiResponse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prakriti_responses', to='user_management.userprofile')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_management.prakritiquestion')),
                ('selected_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_management.prakritioption')),
            ],
            options={
                'ordering': ['question__question_number'],
                'unique_together': {('patient', 'question')},
            },
        ),
        migrations.CreateModel(
            name='DiseaseResponse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('response', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('sometimes', 'Sometimes'), ('not_sure', 'Not Sure')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disease_responses', to='user_management.userprofile')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_management.diseasequestion')),
            ],
            options={
                'ordering': ['question__question_number'],
                'unique_together': {('patient', 'question')},
            },
        ),
    ]
